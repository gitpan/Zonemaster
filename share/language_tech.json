{
   "ADDRESS" : {
      "NAMESERVER_IP_PRIVATE_NETWORK" : "Nameserver {ns} has an IP address ({address}) with prefix {prefix} referenced in {reference} as a '{name}'.",
      "NAMESERVER_IP_PTR_MISMATCH" : "Nameserver {ns} has an IP address ({address}) with mismatched PTR result ({names}).",
      "NAMESERVER_IP_WITHOUT_REVERSE" : "Nameserver {ns} has an IP address ({address}) without PTR configured."
   },
   "BASIC" : {
      "HAS_A_RECORDS" : "Nameserver {source} returned A record(s) for {name}",
      "HAS_GLUE" : "Nameserver for zone {parent} listed these nameservers as glue: {ns}",
      "HAS_NAMESERVERS" : "Nameserver {source} listed these servers as glue: {ns}",
      "NO_DOMAIN" : "Nameserver for zone {parent} responded with NXDOMAIN to query for glue.",
      "NO_GLUE" : "Nameservers for \"{parent}\" provided no NS records for tested zone. RCODE given was {rcode}.",
      "NO_PARENT_RESPONSE" : "No response from nameserver for zone {parent} when trying to fetch glue.",
      "NS_FAILED" : "Nameserver {source} did not return NS records. RCODE was {rcode}.",
      "NS_NO_RESPONSE" : "Nameserver {source} did not respond to NS query."
   },
   "CONNECTIVITY" : {
      "ADDRESS_TYPE_NOT_IMPLEMENTED" : "Service provided by - {service} - does not work with IPv{type} addresses",
      "NAMESERVERS_IPV4_WITH_UNIQ_AS" : "All nameservers IPv4 addresses are in the same AS ({asn}).",
      "NAMESERVERS_IPV6_WITH_UNIQ_AS" : "All nameservers IPv6 addresses are in the same AS ({asn}).",
      "NAMESERVERS_WITH_UNIQ_AS" : "All nameservers are in the same AS ({asn}).",
      "NAMESERVER_HAS_TCP_53" : "Nameserver {ns}/{address} accessible over TCP on port 53.",
      "NAMESERVER_HAS_UDP_53" : "Nameserver {ns}/{address} accessible over UDP on port 53.",
      "NAMESERVER_IPV6_ADDRESSES_NOT_BOGON" : "None of the {nb} nameserver(s) with IPv6 addresses is part of a bogon prefix.",
      "NAMESERVER_IPV6_ADDRESS_BOGON" : "Nameserver {ns} IPv6 address {address} is part of a bogon prefix.",
      "NAMESERVER_NO_TCP_53" : "Nameserver {ns}/{address} not accessible over TCP on port 53.",
      "NAMESERVER_NO_UDP_53" : "Nameserver {ns}/{address} not accessible over UDP on port 53.",
      "NAMESERVER_WITH_UNALLOCATED_ADDRESS" : "Nameserver {ns}/{address} uses an unassigned/unannounced address."
   },
   "CONSISTENCY" : {
      "MULTIPLE_SOA_RNAMES" : "Saw {count} SOA rname.",
      "MULTIPLE_SOA_SERIALS" : "Saw {count} SOA serial numbers.",
      "MULTIPLE_SOA_TIME_PARAMETER_SET" : "Saw {count} SOA time parameter set.",
      "NO_RESPONSE" : "Nameserver {ns} did not respond.",
      "ONE_SOA_RNAME" : "A single SOA rname value was seen ({rname})",
      "ONE_SOA_SERIAL" : "A single SOA serial number was seen ({serial}).",
      "ONE_SOA_TIME_PARAMETER_SET" : "A single SOA time parameter set was seen (REFRESH={refresh},RETRY={retry},EXPIRE={expire},MINIMUM={minimum}).",
      "SOA_RNAME" : "Saw SOA rname {rname} on following nameserver set : {servers}.",
      "SOA_SERIAL" : "Saw SOA serial number {serial} on following nameserver set : {servers}.",
      "SOA_TIME_PARAMETER_SET" : "Saw SOA time parameter set (REFRESH={refresh},RETRY={retry},EXPIRE={expire},MINIMUM={minimum}) on following nameserver set : {servers}."
   },
   "DELEGATION" : {
      "ENOUGH_NS" : "Child lists enough nameservers ({count}).",
      "ENOUGH_NS_GLUE" : "Parent lists enough nameservers ({count}).",
      "EXTRA_NAME_CHILD" : "Child has nameserver(s) not listed at parent ({extra}).",
      "EXTRA_NAME_PARENT" : "Parent has nameserver(s) not listed at the child ({extra}).",
      "IS_NOT_AUTHORITATIVE" : "Nameserver {ns} response is not authoritative on {proto} port 53.",
      "NAMES_MATCH" : "All of the nameserver names are listed both at parent and child.",
      "NOT_ENOUGH_NS" : "Child does not list enough nameservers ({count}).",
      "NOT_ENOUGH_NS_GLUE" : "Parent does not list enough nameservers ({count}).",
      "NS_RR_IS_CNAME" : "Nameserver {ns} {address_type} RR point to CNAME.",
      "REFERRAL_SIZE_LARGE" : "The smallest possible legal referral packet is larger than 512 octets (it is {size}).",
      "REFERRAL_SIZE_OK" : "The smallest possible legal referral packet is smaller than 513 octets (it is {size}).",
      "SAME_IP_ADDRESS" : "IP {address} refers to multiple nameservers ({nss}).",
      "SOA_NOT_EXISTS" : "A SOA query NOERROR response from {ns} was received empty.",
      "TOTAL_NAME_MISMATCH" : "None of the nameservers listed at the parent are listed at the child."
   },
   "DNSSEC" : {
      "ALGORITHM_DEPRECATED" : "The DNSKEY with tag {keytag} uses deprecated algorithm number {algorithm}.",
      "ALGORITHM_OK" : "The DNSKEY with tag {keytag} uses algorithm number {algorithm}, which is OK.",
      "ALGORITHM_RESERVED" : "The DNSKEY with tag {keytag} uses reserved algorithm number {algorithm}.",
      "ALGORITHM_UNASSIGNED" : "The DNSKEY with tag {keytag} uses unassigned algorithm number {algorithm}.",
      "COMMON_KEYTAGS" : "There are both DS and DNSKEY records with key tags {keytags}.",
      "DNSKEY_AND_DS" : "{parent} sent a DS record, and {child} a DNSKEY record.",
      "DNSKEY_BUT_NOT_DS" : "{child} sent a DNSKEY record, but {parent} did not send a DS record.",
      "DNSKEY_NOT_SIGNED" : "The apex DNSKEY RRset was not correctly signed.",
      "DNSKEY_SIGNATURE_NOT_OK" : "Signature for DNSKEY with tag {signature} failed to verify with error '{error}'.",
      "DNSKEY_SIGNATURE_OK" : "A signature for DNSKEY with tag {signature} was correctly signed.",
      "DNSKEY_SIGNED" : "The apex DNSKEY RRset was correcly signed.",
      "DS_BUT_NOT_DNSKEY" : "{parent} sent a DS record, but {child} did not send a DNSKEY record.",
      "DS_DIGTYPE_NOT_OK" : "DS record with keytag {keytag} uses forbidden digest type {digtype}.",
      "DS_DIGTYPE_OK" : "DS record with keytag {keytag} uses digest type {digtype}, which is OK.",
      "DS_DOES_NOT_MATCH_DNSKEY" : "DS record with keytag {keytag} does not match the DNSKEY with the same tag.",
      "DS_FOUND" : "Found DS records with tags {keytags}",
      "DS_MATCHES_DNSKEY" : "DS record with keytag {keytag} matches the DNSKEY with the same tag.",
      "DS_MATCH_FOUND" : "At least one DS record with a matching DNSKEY record was found.",
      "DS_MATCH_NOT_FOUND" : "No DS record with a matching DNSKEY record was found.",
      "DURATION_LONG" : "RRSIG with keytag {tag} and covering type(s) {types} has a duration of {duration} seconds, which is too long.",
      "DURATION_OK" : "RRSIG with keytag {tag} and covering type(s) {types} has a duration of {duration} seconds, which is just fine.",
      "DURATION_SHORT" : "RRSIG with keytag {tag} and covering type(s) {types} has a duration of {duration} seconds, which is too short.",
      "EXTRA_PROCESSING_BROKEN" : "Server at {server} sent {keys} DNSKEY records and {sigs} RRSIG records.",
      "EXTRA_PROCESSING_OK" : "Server at {server} sent {keys} DNSKEY records and {sigs} RRSIG records.",
      "HAS_NSEC" : "The zone has NSEC records.",
      "HAS_NSEC3" : "The zone has NSEC3 records.",
      "INVALID_NAME_FOUND" : "When asked for the name {name}, which must not exist, the response was not an error.",
      "INVALID_NAME_RCODE" : "When asked for the name {name}, which must not exist, the response had RCODE {rcode}.",
      "ITERATIONS_OK" : "The number of NSEC3 iterations is {count}, which is OK.",
      "MANY_ITERATIONS" : "The number of NSEC3 iterations is {count}, which is on the high side.",
      "NEITHER_DNSKEY_NOR_DS" : "There are neither DS nor DNSKEY records for the zone.",
      "NO_COMMON_KEYTAGS" : "No DS record had a DNSKEY with a matching keytag.",
      "NO_DNSKEY" : "No DNSKEYs were returned.",
      "NO_DS" : "{from} returned no DS records for {zone}.",
      "NO_KEYS_OR_NO_SIGS" : "Cannot test DNSKEY signatures, because we got {keys} DNSKEY records and {sigs} RRSIG records.",
      "NO_KEYS_OR_NO_SIGS_OR_NO_SOA" : "Cannot test SOA signatures, because we got {keys} DNSKEY records, {sigs} RRSIG records and {soas} SOA records.",
      "NO_NSEC3PARAM" : "{server} returned no NSEC3PARAM records.",
      "NSE3C_SIG_VERIFY_ERROR" : "Trying to verify NSEC3 RRset with RRSIG {sig} gave error '{error}'.",
      "NSEC3_COVERS" : "NSEC3 record covers {name}.",
      "NSEC3_COVERS_NOT" : "NSEC3 record does not cover {name}.",
      "NSEC3_NOT_SIGNED" : "No signature correctly signed the NSEC3 RRset.",
      "NSEC3_SIGNED" : "At least one signature correctly signed the NSEC3 RRset.",
      "NSEC_COVERS" : "NSEC covers {name}.",
      "NSEC_COVERS_NOT" : "NSEC does not cover {name}.",
      "NSEC_NOT_SIGNED" : "No signature correctly signed the NSEC RRset.",
      "NSEC_SIGNED" : "At least one signature correctly signed the NSEC RRset.",
      "NSEC_SIG_VERIFY_ERROR" : "Trying to verify NSEC RRset with RRSIG {sig} gave error '{error}'.",
      "SOA_NOT_SIGNED" : "No RRSIG correctly signed the SOA RRset.",
      "SOA_SIGNATURE_NOT_OK" : "Trying to verify SOA RRset with signature {signature} gave error '{error}'.",
      "SOA_SIGNATURE_OK" : "RRSIG {signature} correctly signs SOA RRset.",
      "SOA_SIGNED" : "At least one RRSIG correctly signs the SOA RRset.",
      "TOO_MANY_ITERATIONS" : "The number of NSEC3 iterations is {count}, which is too high for key length {keylength}."
   },
   "HOSTNAME" : {
      "ALPHANUMERIC_START" : "{name} starts with an alphanumeric character.",
      "CHECKING_NAME" : "{name} is about to be checked.",
      "DASH_END" : "{name} has a label that ends with a dash character.",
      "NON_ALPHANUMERIC_START" : "{name} does not start with an alphanumeric character.",
      "NON_NUMERIC_TOP" : "{name} does not have an all-numeric top-level label.",
      "NO_DASH_END" : "{name} has no labels ending with dash characters.",
      "NUMERIC_TOP" : "{name} has an all-numeric top-level label."
   },
   "NAMESERVER" : {
      "ANSWER_BAD_RCODE" : "Nameserver {ns}/{address} answered AAAA query with an unexpected rcode ({rcode}).",
      "AXFR_AVAILABLE" : "Nameserver {ns}/{address} allow zone transfer using AXFR.",
      "AXFR_FAILURE" : "AXFR not available on nameserver {ns}/{address}.",
      "EDNS0_BAD_ANSWER" : "Nameserver {ns}/{address} does not support EDNS0 (OPT not set in reply)",
      "EDNS0_BAD_QUERY" : "Nameserver {ns}/{address} does not support EDNS0 (replies with FORMERR)",
      "IS_A_RECURSOR" : "Nameserver {ns} answered with a RCODE NXDOMAIN to SOA query on {dname}.",
      "QUERY_DROPPED" : "Nameserver {ns}/{address} dropped AAAA query.",
      "SAME_SOURCE_IP" : "Nameserver {ns}/{address} replies on a SOA query with a different source address ({source})."
   },
   "SYNTAX" : {
      "DISCOURAGED_DOUBLE_DASH" : "Domain name ({name}) has a label ({label}) with a double hyphen ('--') in position 3 and 4  (with a prefix which is not 'xn--').",
      "INITIAL_HYPHEN" : "Domain name ({name}) has a label ({label}) starting with an hyphen ('-').",
      "MNAME_DISCOURAGED_DOUBLE_DASH" : "SOA MNAME ({name}) has a label ({label}) with a double hyphen ('--') in position 3 and 4  (with a prefix which is not 'xn--').",
      "MNAME_LABEL_TOO_LONG" : "SOA MNAME ({name}) has a label ({label}) too long ({length}/{max}).",
      "MNAME_NAME_TOO_LONG" : "SOA MNAME ({name}) is too long ({length}/{max}).",
      "MNAME_NUMERIC_TLD" : "SOA MNAME ({name}) within a 'numeric only' TLD ({tld}).",
      "MX_DISCOURAGED_DOUBLE_DASH" : "Domain name MX ({name}) has a label ({label}) with a double hyphen ('--') in position 3 and 4  (with a prefix which is not 'xn--').",
      "MX_LABEL_TOO_LONG" : "Domain name MX ({name}) has a label ({label}) too long ({length}/{max}).",
      "MX_NAME_TOO_LONG" : "Domain name MX  is too long ({length}/{max}).",
      "MX_NUMERIC_TLD" : "Domain name MX ({name}) within a 'numeric only' TLD ({tld}).",
      "NAMESERVER_DISCOURAGED_DOUBLE_DASH" : "Nameserver ({name}) has a label ({label}) with a double hyphen ('--') in position 3 and 4  (with a prefix which is not 'xn--').",
      "NAMESERVER_LABEL_TOO_LONG" : "Nameserver ({name}) has a label ({label}) too long ({length}/{max}).",
      "NAMESERVER_NAME_TOO_LONG" : "Nameserver ({name}) is too long ({length}/{max}).",
      "NAMESERVER_NUMERIC_TLD" : "Nameserver ({name}) within a 'numeric only' TLD ({tld}).",
      "NON_ALLOWED_CHARS" : "Found illegal characters in the domain name ({name})",
      "ONLY_ALLOWED_CHARS" : "No illegal chatacters in the domain name ({name}).",
      "RNAME_MISUSED_AT_SIGN" : "There must be no misused '@' character in the SOA RNAME field ({rname}).",
      "RNAME_RFC822_INVALID" : "There must be no illegal characters in the SOA RNAME field ({rname}).",
      "SERIAL_NOT_DATE" : "The SOA serial number ({serial}/{why}) field should be in the YYYYMMDDnn format.",
      "TERMINAL_HYPHEN" : "Domain name ({name}) has a label ({label}) ending with an hyphen ('-')."
   },
   "ZONE" : {
      "EXPIRE_LOWER_THAN_REFRESH" : "SOA 'expire' value ({expire}) is lower than the SOA 'refresh' value ({refresh}).",
      "EXPIRE_MINIMUM_VALUE_LOWER" : "SOA 'expire' value ({expire}) is less than the recommended one ({required_expire}).",
      "MASTER_IS_AN_ALIAS" : "SOA 'mname' value ({mname}) refers to a NS which is an alias (CNAME).",
      "MNAME_NOT_AUTHORITATIVE" : "SOA 'mname' nameserver {ns}/{address} is not authoritative for '{zone}' zone.",
      "MNAME_NOT_IN_GLUE" : "SOA 'mname' nameserver is not listed in \"parent\" NS records for tested zone.",
      "MNAME_NO_RESPONSE" : "SOA 'mname' nameserver {ns}/{address} does not respond.",
      "MNAME_RECORD_DOES_NOT_EXIST" : "SOA 'mname' field does not exist",
      "MX_RECORD_IS_CNAME" : "MX record for the domain is pointing to a CNAME.",
      "NO_MX_RECORD" : "No target (MX, A or AAA record) to deliver e-mail for the domain name.",
      "REFRESH_LOWER_THAN_RETRY" : "SOA 'refresh' value ({refresh}) is lower than the SOA 'retry' value ({retry}).",
      "REFRESH_MINIMUM_VALUE_LOWER" : "SOA 'refresh' value ({refresh}) is less than the recommended one ({required_refresh}).",
      "RETRY_MINIMUM_VALUE_LOWER" : "SOA 'retry' value ({retry}) is less than the recommended one ({required_retry}).",
      "SOA_DEFAULT_TTL_MAXIMUM_VALUE_HIGHER" : "SOA 'minimum' value ({minimum}) is higher than the recommended one ({highest_minimum}).",
      "SOA_DEFAULT_TTL_MAXIMUM_VALUE_LOWER" : "SOA 'minimum' value ({minimum}) is less than the recommended one ({lowest_minimum})."
   }
}

